<h1 class="helpPage">Running jobs</h1>

<h2 class="helpPage">Creating jobs</h2>

<p class="helpPage">To create and (immediately) execute a job, select "Create job" from
the space explorer page.  Then set the given execution parameters such as
including wall clock timeout and CPU timeout (see <a
href="http://en.wikipedia.org/wiki/Wall-clock_time">here</a> for the
difference).
</p>

<h2 class="helpPage">Options for Creating Jobs</h2>

<h3 class="helpPage">Selecting an execution queue</h3>

<p class="helpPage">You can also select a queue for execution of your job.
Each job queue is assigned a number of nodes with identical technical specs.
The queues all.q and all2.q are always available for all users to use.
They differ in the kind of compute nodes that are assigned to them.
Those in all2.q are slightly slower and have less RAM.
Community leaders may request the creation of new queues for exclusive access
to nodes, for special, community-related tasks (such as running a competition).
</p>

<h3 class="helpPage">Choosing a pre processor</h3>

<p class="helpPage">With this option you can choose a benchmark pre processor that will alter the
benchmarks before the solvers on them.</p>

<h3 class="helpPage">Choosing a post processor</h3>

<p class="helpPage">With this option you can select a post processor that will extract attributes from the
job results as defined by the post processor.</p>

<h3 class="helpPage">Timeouts</h3>
<p class="helpPage">Timeouts are specified in number of seconds. Any job pairs that exceed the wallclock timeout or cpu
timeout you specify will be terminated. Using these options will ensure that job pairs that are
taking an unreasonable amount of time won't keep your other pairs from running.</p>

<h3 class="helpPage">Maximum Memory</h3>
<p class="helpPage">The units for the maximum memory field is Gigabytes. This option limits the amount of memory a pair can use
before it is terminated.</p>

<h3 class="helpPage">Subscribe to Job Notifications</h3>
<p class="helpPage">
Choose to recieve an email notification when the job status changes
(ie: when the job completes).
</p>

<h2 class="helpPage"> Advanced Options </h2>

<h3 class="helpPage">Choosing an execution order</h3>

<p class="helpPage">There is an option to execute job pairs in depth-first order, which will
execute all job pairs in one subspace before moving on to the next; or
else round-robin, which will result in a workload where all subspaces
make progress in the execution concurrently.  After setting these
options, select "next".
</p>

<h3 class="helpPage">Create Paused</h3>
<p class="helpPage">The "Create Paused" option will pause the job as soon as it is created.</p>

<h3 class="helpPage">pre-processor seed</h3>
<p class="helpPage">This option allows you to specify the seed for a pseudo-random value generator that will
generate a number and pass it to the preprocessor</p>

<h3 class="helpPage">Suppress Timestamps</h3>
<p class="helpPage">Setting this option to "yes" will prevent runsolver from adding timestamps to the jobpair output.</p>

<h3 class="helpPage">Results Interval</h3>
<p class="helpPage">The interval, in seconds, at which to receive incremental results for pairs that are running. 0 means results
are only obtained after pairs finish. 10 is the minimum if this is used.</p>

<h3 class="helpPage">Save Additional Output Files</h3>
<p class="helpPage">Saves solver output that is placed into the extra output directory given to each solver.</p>

<h3 class="helpPage">Soft time limit</h3>
<p class="helpPage"><strong>This option is only available when using BenchExec</strong></p>
<p class="helpPage">If greater than zero, solver will be sent <code>TERM</code>
signal after running for this number of seconds, but will not be sent <code>KILL</code>
signal until either wallclock timeout or cpu timeout. This offers the solver an
opportunity to do any necessary cleanup before being terminated.</p>

<h3 class="helpPage">Delay before termination</h3>
<p class="helpPage"><strong>This option is only available when using runsolver</strong></p>
<p class="helpPage">If greater than zero, solver will be sent <code>TERM</code>
signal after memory or time limits have exceeded, and <code>KILL</code> signal
will be then sent after this number of seconds. This offers the solver an
opportunity to do any necessary cleanup before being terminated.</p>

<p class="helpPage">You can then select whether to "run and keep the hierarchy structure" or
choose which benchmarks and solvers to execute.  The first option will find
all subspaces in the current hierarchy (rooted at the node where you are
creating the job) which have solvers and benchmarks, and execute all possible
combinations of those benchmarks and solvers.  So to run several divisions of
a competition, for example, you can create a subspace for each division,
copy the solvers and benchmarks for that division into that subspace, and
the run a single job from the space containing those subspaces.
</p>

<h2 class="helpPage">Monitoring the execution</h2>

<p class="helpPage">Once the job is created, it will begin queueing immediately.  If
other jobs are running, of course, it may take some time for your job
to make it through the queue to execute on the compute nodes.
You can look at the <a href="explore/cluster.jsp">cluster status page</a>
to monitor queues and nodes.
</p>

<iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/FvVr9izgb6w?rel=0&amp;showinfo=0?ecver=1" frameborder="0" allowfullscreen></iframe>
