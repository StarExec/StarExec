<?xml version="1.0" encoding="UTF-8"?>

<!-- This build file must be configured for local use, using a file
     called deploy.properties, in this directory.

     See example.properties in this directory for an example.
-->

<!-- Starexec production build script. Author: Tyler Jensen, changes by Aaron Stump, Eric Burns -->
<project name="starexec" default="epilog-test" basedir=".">

	<!-- Properties are read-only, so anything in this file will take precedence
	     over anything declared below
	-->
	<property file="build/overrides.properties"/>
	<property file="build/default.properties"/>

	<property name="bash-header" value="#!/bin/bash${line.separator}" />

	<!-- Tell java where to look for JAR files while compiling (our application lib and the apache lib) -->
	<path id="classpath">
		<fileset dir="${web-inf}/lib" includes="**/*.jar"/>
		<fileset dir="${tomcat-dir}/lib" includes="**/*.jar"/>
		<fileset dir="local-lib" includes="**/*.jar"/>
	</path>
	<path id="starcomclasspath">
		<fileset dir="${starcomlib}" includes="**/*.jar"/>
		<fileset dir="${tomcat-dir}/lib" includes="**/*.jar"/>
		<fileset dir="local-lib" includes="**/*.jar"/>
	</path>

	<target name="register-commands">
		<!-- Register commands and create build timestamp for build properties file -->
		<tstamp>
			<format property="Build.Date" pattern="MM/dd/yyyy hh:mm:ss aa" />
		</tstamp>
		<exec outputproperty="Build.Version" executable="svnversion" />
		<exec outputproperty="Build.User" executable="whoami" />
		<property name="generated-message"
		          value="This file generated during build: ${Build.Date}" />
		<property name="generated-bash-header"
		          value="${bash-header}# ${generated-message}${line.separator}" />

		<!-- Clear the build directory if it exists and re-make the dir -->
		<delete dir="${build-dir}" />
		<mkdir dir="${build-dir}" />
		<mkdir dir="${class-dir}" />
	</target>

	<import file="build/build-css.xml"/>
	<import file="build/build-clean.xml"/>
	<import file="build/build-compile.xml"/>
	<import file="build/build-config.xml"/>
	<import file="build/build-test.xml"/>
	<import file="build/build-scripts.xml"/>
	<import file="build/build-sql.xml"/>
	<import file="build/build-starexeccommand.xml"/>

	<target name="format-source" depends="format-css" description="Reformat source" />
	<target name="epilog-test" depends="test, zipstarcom, war" />
	<target name="build" depends="epilog-test" description="Build" />
	<target name="skipcompilation" depends="war" description="Package existing build into a WAR" />

</project>
